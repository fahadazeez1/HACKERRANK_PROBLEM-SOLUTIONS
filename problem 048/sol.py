# Define dot patterns for each letter
patterns = {
    'A': ["..*..",
          ".*.*.",
          "*****",
          "*...*",
          "*...*"],
    'B': ["****.",
          "*...*",
          "****.",
          "*...*",
          "****."],
    'C': [".****",
          "*....",
          "*....",
          "*....",
          ".****"],
    'D': ["****.",
          "*...*",
          "*...*",
          "*...*",
          "****."],
    'E': ["*****",
          "*....",
          "****.",
          "*....",
          "*****"],
    'F': ["*****",
          "*....",
          "****.",
          "*....",
          "*...."],
    'G': [".****",
          "*....",
          "*.*..",
          "*...*",
          ".****"],
    'H': ["*...*",
          "*...*",
          "*****",
          "*...*",
          "*...*"],
    'I': ["*****",
          "..*..",
          "..*..",
          "..*..",
          "*****"],
    'J': ["..***",
          "...*.",
          "...*.",
          "*..*.",
          ".**.."],
    'K': ["*...*",
          "*.*..",
          "**...",
          "*.*..",
          "*...*"],
    'L': ["*....",
          "*....",
          "*....",
          "*....",
          "*****"],
    'M': ["*...*",
          "**.**",
          "*.*.*",
          "*...*",
          "*...*"],
    'N': ["*...*",
          "**..*",
          "*.*.*",
          "*..**",
          "*...*"],
    'O': [".***.",
          "*...*",
          "*...*",
          "*...*",
          ".***."],
    'P': ["****.",
          "*...*",
          "****.",
          "*....",
          "*...."],
    'Q': [".***.",
          "*...*",
          "*...*",
          "*..**",
          ".****"],
    'R': ["****.",
          "*...*",
          "****.",
          "*.*..",
          "*...*"],
    'S': [".****",
          "*....",
          ".***.",
          "....*",
          ".***."],
    'T': ["*****",
          "..*..",
          "..*..",
          "..*..",
          "..*.."],
    'U': ["*...*",
          "*...*",
          "*...*",
          "*...*",
          ".***."],
    'V': ["*...*",
          "*...*",
          "*...*",
          ".*.*.",
          "..*.."],
    'W': ["*...*",
          "*...*",
          "*.*.*",
          "*.*.*",
          "*...*"],
    'X': ["*...*",
          ".*.*.",
          "..*..",
          ".*.*.",
          "*...*"],
    'Y': ["*...*",
          ".*.*.",
          "..*..",
          "..*..",
          "..*.."],
    'Z': ["*****",
          "....*",
          "...*.",
          "..*..",
          "*****"],
    ' ': [".....",
          ".....",
          ".....",
          ".....",
          "....."]
}

def print_name_dotted(name):
    # Convert the name to uppercase and remove invalid characters
    name = name.upper()
    valid_chars = set(patterns.keys())
    name = ''.join(char for char in name if char in valid_chars)

    # Create a list of empty strings for each row
    rows = ['' for _ in range(5)]

    # Build the output for each character in the name
    for char in name:
        pattern = patterns.get(char, patterns[' '])  # Default to space if char not found
        for i in range(5):
            rows[i] += pattern[i] + '  '  # Add spacing between letters

    # Print each row
    for row in rows:
        print(row)

# Get user input
name = input("Enter a name to print in dotted manner: ")
print_name_dotted(name)
